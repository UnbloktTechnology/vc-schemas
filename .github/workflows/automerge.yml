name: Auto Merge pull requests

on:
  pull_request_review:
    types:
      - submitted
      - edited
      - dismissed

jobs:
  automerge:
    if: ${{ github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'staging' }}
    runs-on: ubuntu-latest
    steps:
      # Check for all current approvals if they match with appropriate GH team
      - name: Checking for PR permissions
        env:
          GH_TEAM: ${{ github.event.pull_request.base.ref == 'main' && 'nexera_prod' || 'nexera_staging' }}
        shell: bash
        run: |
          function exists_in_list() {
              LIST=$1
              DELIMITER=$2
              VALUE=$3
              LIST_WHITESPACES=$(echo "$LIST" | tr "$DELIMITER" " ")
              for x in $LIST_WHITESPACES; do
                if [ "$x" = "$VALUE" ]; then
                  return 0
                fi
              done
              return 1
          }

          approvedUsers=($(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.MERGE_BOT_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NexeraProtocol/vc-schemas/pulls/${{ github.event.pull_request.number }}/reviews | jq -r '.[] | select(.state == "APPROVED") | .user.id'))

          teamUserIDs=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.MERGE_BOT_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/NexeraProtocol/teams/${{ env.GH_TEAM }}/members | jq  -r '.[].id')

          COUNTER=0
          for value in "${approvedUsers[@]}"
          do
            if exists_in_list "$teamUserIDs" " " $value; then
              echo "$value is a valid user from the users list which are allowed to merge"
              COUNTER=$((COUNTER+1))
            else
              echo "$value is NOT in the list of valid users to merge"
            fi
          done
          
          if [[ $COUNTER -gt 0 ]] ; then
            echo "Allowed to merge."
          else
            echo "Not merging."
            exit 1
          fi

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.MERGE_BOT_APP_ID }}
          private_key: ${{ secrets.MERGE_BOT_PRIVATE_KEY }}

      - name: Enable merge commits
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.MERGE_BOT_ACCESS_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NexeraProtocol/vc-schemas \
            -d '{"allow_merge_commit":true}' \
            --output /dev/null

      - name: Automatic merge
        id: auto-merge
        uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          MERGE_METHOD: merge
          LOG: DEBUG
          MERGE_RETRIES: 60 # Attempts to merge 60 times every 20 seconds (so workflows can finish)
          MERGE_RETRY_SLEEP: 20000 # Milliseconds

      - name: Disable merge commits
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.MERGE_BOT_ACCESS_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NexeraProtocol/vc-schemas \
            -d '{"allow_merge_commit":false}' \
            --output /dev/null

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          submodules: recursive
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Update branch in schema path files
        run: |
          # e.g. Replace "/development/" with "/staging/" in all schemas
          find examples/**/*.json -type f -exec sed -i -e 's/\/${{ github.event.pull_request.head.ref }}\//\/${{ github.event.pull_request.base.ref }}\//g' {} +
          find examples/**/*.jsonld -type f -exec sed -i -e 's/\/${{ github.event.pull_request.head.ref }}\//\/${{ github.event.pull_request.base.ref }}\//g' {} +

          find polygon-id/**/*.json -type f -exec sed -i -e 's/\/${{ github.event.pull_request.head.ref }}\//\/${{ github.event.pull_request.base.ref }}\//g' {} +
          find polygon-id/**/*.jsonld -type f -exec sed -i -e 's/\/${{ github.event.pull_request.head.ref }}\//\/${{ github.event.pull_request.base.ref }}\//g' {} +

      - name: Initialize mandatory git config
        run: |
          git config --global user.name "nexera-release[bot]"
          git config --global user.email "137495321+nexera-release[bot]@users.noreply.github.com"

      - name: Commit changes
        continue-on-error: true
        run: |
          git add .
          git commit -m "Change ${{ github.event.pull_request.head.ref }} to ${{ github.event.pull_request.base.ref }} branch in schema path files"
          git push
