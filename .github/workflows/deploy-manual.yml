name: Deploy schemas from branch

on:
  workflow_dispatch:
    inputs:
      issuer:
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        description: Polygon issuer
        default: dev
      branch:
        required: true
        type: string
        description: Branch name

jobs:
  release:
    name: Apply schemas
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.MERGE_BOT_APP_ID }}
          private_key: ${{ secrets.MERGE_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
          ref: ${{ inputs.branch }}

      - name: Initialize git config
        run: |
          git config --global user.name "nexera-release[bot]"
          git config --global user.email "137495321+nexera-release[bot]@users.noreply.github.com"

      - name: Install dependencies
        shell: bash
        run: |
          wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver
          semver --version

      - name: Versions
        id: versions
        shell: bash
        run: |
          timestamp=$(date +%s%3N)
          # Go through all files in the polygon-id/ folder
          for file in $(find polygon-id/ -type f -name "*.json"); do
            echo "JSON file: $file"
          
            current=$(cat $file | jq -r '.["$metadata"].version')
            target="$current-${{ inputs.branch }}-$timestamp"
          
            echo "$current"
            echo "$target"
          
            # Set the json file path
            replacement=".json"
            json_file_path="${file/.json/$replacement}"
            echo "JSON file: $json_file_path"
          
            # Perform update
            jq '.["$metadata"].version = "'"$target"'"' "$json_file_path" > temp.json && mv temp.json "$json_file_path"
          done

      - name: Copy schemas to IPFS directory
        continue-on-error: true
        shell: bash
        run: |
          rm -rf ipfs/
          mkdir ipfs
          touch ipfs/.gitkeep
          cp -r polygon-id/* ipfs/
          ls -al ipfs/
          ls -R ipfs/

      - name: Upload jsonID to IPFS and replace uris with hash in json schemas
        shell: bash
        run: |
          # Find all jsonLD files in the ipfs/ folder
          for file in $(find ipfs/ -type f -name "*.jsonld"); do
            echo "JsonLD file: $file"

            # Upload json
            response=$(curl --location "https://api.quicknode.com/ipfs/rest/v1/s3/put-object" -X POST -F Body=@"$file" -F Key="$file" -F ContentType="application/json" -H "x-api-key: ${{ secrets.QUICKNODE_API_KEY }}")
            echo "$response"

            # Parse HASH from uploaded file
            ipfs_hash=$(echo "$response" | jq -r '.pin.cid')
            echo "$ipfs_hash"

            # Set the json file path
            replacement=".json"
            json_file_path="${file/.jsonld/$replacement}"
            echo "JSON file: $json_file_path"

            # Perform update
            jq '.["$metadata"].uris.jsonLdContext = "https://quicknode.quicknode-ipfs.com/ipfs/'"$ipfs_hash"'"' "$json_file_path" > temp.json && mv temp.json "$json_file_path"
          done

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          branch: ${{ inputs.branch }}
          message: 'chore: Update IPFS schemas'
          author_name: 'nexera-release[bot]'
          author_email: '137495321+nexera-release[bot]@users.noreply.github.com'

      - name: Get latest commit hash
        id: commit_hash
        shell: bash
        run: |
          hash=$(git rev-parse --verify HEAD)
          echo "hash=$hash" >> $GITHUB_OUTPUT

      - name: Upload schemas to issuer (amoy)
        shell: bash
        run: |
          issuer="https://amoy-issuer-node-dev.nexera.id/v1/schemas"
          if [ ${{ inputs.issuer }} == 'staging' ]; then
            issuer="https://amoy-issuer-node-staging.nexera.id/v1/schemas"
          elif [ ${{ inputs.issuer }} == 'prod' ]; then
            issuer="https://amoy-issuer-node-prod.nexera.id/v1/schemas"
          fi
          
          for file in $(find ipfs/ -type f -name "*.json"); do
            echo "JSON file: $file"
            version=$(cat "$file" | jq -r '.["$metadata"].version')
            echo "$version"

            schema=$(cat "$file" | jq -r '.["$metadata"].type')
            echo "$schema"

            response=$(curl --location "https://api.quicknode.com/ipfs/rest/v1/s3/put-object" -X POST -F Body=@"$file" -F Key="$file" -F ContentType="application/json" -H "x-api-key: ${{ secrets.QUICKNODE_API_KEY }}")
            echo "$response"
          
            # Parse HASH from uploaded file
            ipfs_hash=$(echo "$response" | jq -r '.pin.cid')
            echo "$ipfs_hash"

            curl -X POST "$issuer" \
              -H "accept: application/json" \
              -H "content-type: application/json" \
              -u "${{ secrets.ISSUER_NODE_USERNAME_PROD }}:${{ secrets.ISSUER_NODE_PASSWORD_PROD }}" \
              -d "{\"url\":\"https://quicknode.quicknode-ipfs.com/ipfs/${ipfs_hash}\",\"schemaType\":\"${schema}\",\"version\":\"${version}\"}"
          done

      - name: Upload schemas to issuer (mainnet)
        if: ${{ inputs.issuer == 'prod' }}
        shell: bash
        run: |
          for file in $(find ipfs/ -type f -name "*.json"); do
            echo "JSON file: $file"
            version=$(cat "$file" | jq -r '.["$metadata"].version')
            echo "$version"

            schema=$(cat "$file" | jq -r '.["$metadata"].type')
            echo "$schema"

            response=$(curl --location "https://api.quicknode.com/ipfs/rest/v1/s3/put-object" -X POST -F Body=@"$file" -F Key="$file" -F ContentType="application/json" -H "x-api-key: ${{ secrets.QUICKNODE_API_KEY }}")
            echo "$response"
          
            # Parse HASH from uploaded file
            ipfs_hash=$(echo "$response" | jq -r '.pin.cid')
            echo "$ipfs_hash"

            curl -X POST "https://issuer-node.nexera.id/v1/schemas" \
              -H "accept: application/json" \
              -H "content-type: application/json" \
              -u "${{ secrets.ISSUER_NODE_USERNAME_PROD_MAINNET }}:${{ secrets.ISSUER_NODE_PASSWORD_PROD_MAINNET }}" \
              -d "{\"url\":\"https://quicknode.quicknode-ipfs.com/ipfs/${ipfs_hash}\",\"schemaType\":\"${schema}\",\"version\":\"${version}\"}"
          done

      - name: Go back one commit
        shell: bash
        run: |
          git revert $(git log -n1 --format="%h" | cat)
          git push origin
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
